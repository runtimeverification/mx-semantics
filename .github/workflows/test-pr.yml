name: 'Run Tests'
on:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python-code-quality-checks:
    name: 'Code Quality Checks'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:    
          submodules: recursive
      - name: 'Install Poetry'
        uses: Gr1N/setup-poetry@v8
      - name: 'Build and run code quality checks'
        run: make -C kmultiversx check
  simple-tests:
    runs-on: [self-hosted, linux, normal]
    name: 'Simple Tests'
    needs: [python-code-quality-checks]
    timeout-minutes: 30
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:    
          submodules: recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Build Haskell'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make build-haskell RELEASE=true -j4'
      - name: 'Install Kmultiversx'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make poetry-install'
      - name: 'Run Python Unit Tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm unittest-python'
      - name: 'Run Simple Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-simple -j6'
      - name: 'Run Mandos Tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm mandos-test -j6'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  feature-tests:
    runs-on: [self-hosted, linux, normal]
    name: 'Feature Tests'
    needs: [simple-tests]
    timeout-minutes: 120
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:    
          submodules: recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Install Kmultiversx'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make poetry-install'
      - name: 'Run Basic Feature Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-basic-features -j6'
      - name: 'Run Alloc Feature Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-alloc-features -j6'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  example-contract-tests:
    runs-on: [self-hosted, linux, normal]
    name: 'Example Contract Tests'
    needs: [feature-tests]
    timeout-minutes: 60
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:    
          submodules: recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Install Kmultiversx'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make poetry-install'
      - name: 'Run Adder Contract Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-adder'
      - name: 'Run Crowdfunding ESDT Contract Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-crowdfunding-esdt'
      - name: 'Run Multisig Contract Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-multisig'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  custom-contract-tests:
    runs-on: [self-hosted, linux, normal]
    name: 'Custom Contract Tests'
    needs: [feature-tests]
    timeout-minutes: 30
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:    
          submodules: recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Install Kmultiversx'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make poetry-install'
      - name: 'Run Custom Contract Tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-custom-contracts'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  kmultiversx-tests:
    needs: simple-tests
    name: 'KMultiversX Tests'
    runs-on: [self-hosted, linux, normal]
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:    
          submodules: recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build Kasmer'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make build-kasmer -j4'
      - name: 'Install Kmultiversx'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make poetry-install'
      - name: 'Run tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c \
              'make -C kmultiversx test TEST_ARGS="--kasmer-llvm-dir ../.build/defn/llvm/kasmer-kompiled/"'
      - name: 'Run TestApi tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c \
              'make test-testapi'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}
