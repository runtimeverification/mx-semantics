name: 'Run Tests'
on:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-test:
    runs-on: [self-hosted, linux, normal]
    name: 'Unit Test'
    timeout-minutes: 90
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          # fetch-depth 0 means deep clone the repo
          fetch-depth: 0
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make build RELEASE=true
      - name: 'Run Simple Test'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make TEST_CONCRETE_BACKEND=llvm test-simple -j6
      - name: 'Run Python Unit Tests'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make TEST_CONCRETE_BACKEND=llvm unittest-python
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  mandos-test:
    runs-on: [self-hosted, linux, normal]
    name: 'Mandos Tests'
    needs: [unit-test]
    timeout-minutes: 90
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          # fetch-depth 0 means deep clone the repo
          fetch-depth: 0
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make build RELEASE=true
      - name: 'Run Mando Coverage'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make TEST_CONCRETE_BACKEND=llvm mandos-coverage
      - name: 'Run Mando Test'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make TEST_CONCRETE_BACKEND=llvm mandos-test -j6
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  basic-feature-test:
    runs-on: [self-hosted, linux, normal]
    name: 'Basic Feature Test'
    needs: [unit-test, mandos-test]
    timeout-minutes: 90
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          # fetch-depth 0 means deep clone the repo
          fetch-depth: 0
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make build RELEASE=true
      - name: 'Run Basic Feature Test'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make TEST_CONCRETE_BACKEND=llvm test-elrond-basic-features
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  multisig-contract-test:
    runs-on: [self-hosted, linux, normal]
    name: 'Multisig Contract Test'
    needs: [unit-test, mandos-test]
    timeout-minutes: 90
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          # fetch-depth 0 means deep clone the repo
          fetch-depth: 0
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make build RELEASE=true
      - name: 'Run Multisig Contract Test'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make TEST_CONCRETE_BACKEND=llvm test-elrond-multisig
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  adder-test:
    runs-on: [self-hosted, linux, normal]
    name: 'Multisig Contract Test'
    needs: [unit-test, mandos-test]
    timeout-minutes: 90
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
          # fetch-depth 0 means deep clone the repo
          fetch-depth: 0
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make build RELEASE=true
      - name: 'Run Multisig Contract Test'
        run: docker exec -u user elrond-semantics-ci-${GITHUB_SHA} make TEST_CONCRETE_BACKEND=llvm test-elrond-adder
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

          
