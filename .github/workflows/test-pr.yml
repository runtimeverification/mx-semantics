name: 'Run Tests'
on:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  simple-tests:
    runs-on: [self-hosted, linux, huge]
    name: 'Simple Tests'
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
      - name: Checkout submodules
        env: 
          GITHUB_TOKEN: ${{ secrets.JENKINS_GITHUB_PAT }}
        run: |
          # https://gist.github.com/taoyuan/bfa3ff87e4b5611b5cbe ; for a repository we don't control the submodules over. 
          git config --global url."https://github.com/".insteadOf git@github.com:
          git config --global url."https://".insteadOf git://
          git submodule update --init --recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Run Python Unit Tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm unittest-python'
      - name: 'Run Simple Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-simple -j6'
      - name: 'Run Mandos Tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA}  /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm mandos-test -j6'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  feature-tests:
    runs-on: [self-hosted, linux, huge]
    name: 'Feature Tests'
    needs: [simple-tests]
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
      - name: Checkout submodules
        env: 
          GITHUB_TOKEN: ${{ secrets.JENKINS_GITHUB_PAT }}
        run: |
          # https://gist.github.com/taoyuan/bfa3ff87e4b5611b5cbe ; for a repository we don't control the submodules over. 
          git config --global url."https://github.com/".insteadOf git@github.com:
          git config --global url."https://".insteadOf git://
          git submodule update --init --recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Run Basic Feature Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-basic-features -j6'
      - name: 'Run Alloc Feature Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-alloc-features -j6'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  example-contract-tests:
    runs-on: [self-hosted, linux, huge]
    name: 'Example Contract Tests'
    needs: [feature-tests]
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
      - name: Checkout submodules
        env: 
          GITHUB_TOKEN: ${{ secrets.JENKINS_GITHUB_PAT }}
        run: |
          # https://gist.github.com/taoyuan/bfa3ff87e4b5611b5cbe ; for a repository we don't control the submodules over. 
          git config --global url."https://github.com/".insteadOf git@github.com:
          git config --global url."https://".insteadOf git://
          git submodule update --init --recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Run Adder Contract Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-adder'
      - name: 'Run Crowdfunding ESDT Contract Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-crowdfunding-esdt'
      - name: 'Run Multisig Contract Test'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-elrond-multisig'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}

  custom-contract-tests:
    runs-on: [self-hosted, linux, huge]
    name: 'Custom Contract Tests'
    needs: [feature-tests]
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.JENKINS_GITHUB_PAT }}
      - name: Checkout submodules
        env: 
          GITHUB_TOKEN: ${{ secrets.JENKINS_GITHUB_PAT }}
        run: |
          # https://gist.github.com/taoyuan/bfa3ff87e4b5611b5cbe ; for a repository we don't control the submodules over. 
          git config --global url."https://github.com/".insteadOf git@github.com:
          git config --global url."https://".insteadOf git://
          git submodule update --init --recursive
      - name: 'Set up Docker'
        uses: ./.github/actions/with-docker
        with:
          container-name: elrond-semantics-ci-${{ github.sha }}
      - name: 'Build'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make build RELEASE=true -j4'
      - name: 'Run Custom Contract Tests'
        run: docker exec -t elrond-semantics-ci-${GITHUB_SHA} /bin/bash -c 'make TEST_CONCRETE_BACKEND=llvm test-custom-contracts'
      - name: 'Tear down Docker'
        if: always()
        run: |
          docker stop --time=0 elrond-semantics-ci-${GITHUB_SHA}
